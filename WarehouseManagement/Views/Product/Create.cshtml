@model WarehouseManagement.DAL.Product

@{
    ViewBag.Title = "Create";

}


<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Category</label>
            <div class="col-md-10">
                @Html.DropDownList("ProductCategoryID",null, "- Select Category -", htmlAttributes: new { @Name = "catList", @class = "form-control"  })
            </div>
        </div>

        <div class="form-group">    
            @Html.LabelFor(model => model.ProductGroupID, "GroupID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <!-- @Html.DropDownList("GroupID",null, "- Select Group -", htmlAttributes: new { @id = "group", @class = "form-control"  })-->
                <select class="form-control" id="GroupID" name="GroupID">
         <option value="">- - Select a Group -</option>


     </select> 
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            $('select[name="catList"]').change(function () {
                CatId = $(this).val();
             
                $.ajax({                      
                    type: "GET",
                    url: "/Product/GetProdGroupList?id="+CatId,                
                   // data: "{ id: " + CatId + "}",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        console.log(response);
                        $('#GroupID').find('option').remove().end()
                            .append('<option value="">- select a Group -</option>')
                            .val('whatever');
                        //Looping over emloyee list and display it
                        $.each(response, function (index, groupName) {
                            console.log(index + groupName);
                            
                            $('#GroupID').append('<option value="' + index + '">' + groupName+
                                '</option>');
                        });
                    },  
                    error: function (err) {
                        //alert(err.status + " - " + err.statusText);
                        console.log(err.status + " - " + err.statusText);
                        console.log(err.responseText);

                    }
                    //complete: function () {
                   //     Hide(); // Hide loader icon
                    //},
                    //failure: function (jqXHR, textStatus, errorThrown) {
                    //    alert("HTTP Status: " + jqXHR.status + "; Error Text: " + jqXHR.responseText); // Display error message
                    //}
                });
            });
        });

    </script>
}
